.themeToggle {
  display: inline-flex;
  align-items: center;
  gap: var(--ds-spacing-2);
  padding: var(--ds-spacing-2) var(--ds-spacing-3);
  background-color: var(--ds-semantic-background-secondary);
  border: 1px solid var(--ds-semantic-border-primary);
  border-radius: var(--ds-radius-md);
  color: var(--ds-semantic-text-primary);
  font-size: var(--ds-typography-fontSize-sm);
  font-weight: var(--ds-typography-fontWeight-medium);
  cursor: pointer;
  transition: all var(--ds-animation-duration-200) var(--ds-animation-easing-out);
  user-select: none;

  &:hover {
    background-color: var(--ds-semantic-background-tertiary);
    border-color: var(--ds-semantic-border-focus);
    transform: translateY(-1px);
    box-shadow: var(--ds-shadow-sm);
  }

  &:active {
    transform: translateY(0);
    box-shadow: var(--ds-shadow-xs);
  }

  &:focus {
    outline: none;
    border-color: var(--ds-semantic-border-focus);
    box-shadow: 0 0 0 2px var(--ds-colors-primary-100);
  }

  &:disabled {
    opacity: 0.5;
    cursor: not-allowed;
    transform: none;
  }
}

.iconContainer {
  display: flex;
  align-items: center;
  justify-content: center;
}

.icon {
  width: 1rem;
  height: 1rem;
  transition: transform var(--ds-animation-duration-300) var(--ds-animation-easing-out);
}

.themeToggle:hover .icon {
  transform: rotate(15deg);
}

.label {
  font-size: inherit;
  font-weight: inherit;
  color: inherit;
}

// Size variants
.sm {
  padding: var(--ds-spacing-1) var(--ds-spacing-2);
  font-size: var(--ds-typography-fontSize-xs);
  gap: var(--ds-spacing-1);

  .icon {
    width: 0.875rem;
    height: 0.875rem;
  }
}

.md {
  padding: var(--ds-spacing-2) var(--ds-spacing-3);
  font-size: var(--ds-typography-fontSize-sm);
  gap: var(--ds-spacing-2);

  .icon {
    width: 1rem;
    height: 1rem;
  }
}

.lg {
  padding: var(--ds-spacing-3) var(--ds-spacing-4);
  font-size: var(--ds-typography-fontSize-base);
  gap: var(--ds-spacing-2);

  .icon {
    width: 1.125rem;
    height: 1.125rem;
  }
}

// Style variants
.default {
  // Default styles already defined above
}

.minimal {
  background-color: transparent;
  border: none;
  padding: var(--ds-spacing-1);

  &:hover {
    background-color: var(--ds-semantic-background-tertiary);
    border: none;
  }
}

.outline {
  background-color: transparent;
  border: 2px solid var(--ds-semantic-border-primary);

  &:hover {
    background-color: var(--ds-semantic-background-primary);
  }
}

.ghost {
  background-color: transparent;
  border: none;
  color: var(--ds-semantic-text-secondary);

  &:hover {
    background-color: var(--ds-semantic-background-tertiary);
    color: var(--ds-semantic-text-primary);
  }
}